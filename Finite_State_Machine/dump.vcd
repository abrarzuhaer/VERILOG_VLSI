$date
	Sat Jan 07 04:13:36 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! frame_error $end
$var reg 1 " clk $end
$var reg 5 # data [4:0] $end
$var reg 1 $ data_in $end
$var reg 1 % reset_n $end
$var reg 1 & rx_start $end
$var integer 32 ' current_time [31:0] $end
$var integer 32 ( i [31:0] $end
$var integer 32 ) j [31:0] $end
$var integer 32 * start_time [31:0] $end
$scope module DUT $end
$var wire 1 " clk $end
$var wire 1 $ data_in $end
$var wire 1 ! frame_error $end
$var wire 1 % reset_n $end
$var wire 1 & rx_start $end
$var wire 1 + shift_en $end
$var wire 1 , frame_error_gen $end
$var wire 5 - data_out [4:0] $end
$var wire 1 . clk_increament $end
$var wire 1 / clk_count_eq_5 $end
$var wire 3 0 clk_count [2:0] $end
$var wire 1 1 clk_clear $end
$var wire 1 2 bit_increament $end
$var wire 1 3 bit_count_eq_5 $end
$var wire 3 4 bit_count [2:0] $end
$var wire 1 5 bit_clear $end
$scope module bit_cmp $end
$var wire 3 6 value2 [2:0] $end
$var wire 3 7 value1 [2:0] $end
$var parameter 32 8 VALUE_WIDTH $end
$var reg 1 3 is_equal $end
$upscope $end
$scope module bit_counter $end
$var wire 1 " clk $end
$var wire 1 % reset_n $end
$var wire 1 2 increament $end
$var wire 1 5 clear $end
$var reg 3 9 count [2:0] $end
$upscope $end
$scope module clk_cmp $end
$var wire 3 : value2 [2:0] $end
$var wire 3 ; value1 [2:0] $end
$var parameter 32 < VALUE_WIDTH $end
$var reg 1 / is_equal $end
$upscope $end
$scope module clk_counter $end
$var wire 1 " clk $end
$var wire 1 % reset_n $end
$var wire 1 . increament $end
$var wire 1 1 clear $end
$var reg 3 = count [2:0] $end
$upscope $end
$scope module controller $end
$var wire 1 3 bit_count_eq_5 $end
$var wire 1 " clk $end
$var wire 1 / clk_count_eq_5 $end
$var wire 1 % reset_n $end
$var wire 1 & rx_start $end
$var parameter 2 > CHECK $end
$var parameter 2 ? IDLE $end
$var parameter 2 @ SAMPLE $end
$var parameter 2 A WAIT $end
$var reg 1 5 bit_clear $end
$var reg 1 2 bit_increament $end
$var reg 1 1 clk_clear $end
$var reg 1 . clk_increament $end
$var reg 1 , frame_error_gen $end
$var reg 3 B next_state [2:0] $end
$var reg 3 C present_state [2:0] $end
$var reg 1 + shift_en $end
$upscope $end
$scope module shift $end
$var wire 1 " clk $end
$var wire 1 $ data_in $end
$var wire 1 % reset_n $end
$var wire 1 + shift_en $end
$var parameter 32 D DATA_WIDTH $end
$var reg 5 E data_out [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 D
b1 A
b10 @
b0 ?
b11 >
b11 <
b11 8
$end
#0
$dumpvars
bx E
bx C
bx B
bx =
bx ;
b100 :
bx 9
bx 7
b100 6
x5
bx 4
03
x2
x1
bx 0
0/
x.
bx -
x,
x+
bx *
bx )
bx (
bx '
0&
1%
x$
bx #
0"
x!
$end
#5
0!
02
15
1.
11
0+
0,
b0 B
b0 0
b0 ;
b0 =
b0 4
b0 7
b0 9
b0 -
b0 E
b0 C
0%
1"
#10
0"
#15
b1 B
0$
b1111 '
b1111 *
1&
b0 )
b0 (
1%
1"
#20
0"
#25
05
01
b1 C
1$
b11001 '
1"
#30
0"
#35
b1 0
b1 ;
b1 =
b100011 '
1"
#40
0"
#45
b10 0
b10 ;
b10 =
b101101 '
1"
#50
0"
#55
b11 0
b11 ;
b11 =
b110111 '
1"
#60
0"
#65
11
b10 B
1/
b100 0
b100 ;
b100 =
b1000001 *
b1 (
bx1 #
b1000001 '
1"
#70
0"
#75
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
b1001011 '
1"
#80
0"
#85
02
0+
b1 0
b1 ;
b1 =
b1 4
b1 7
b1 9
b1 C
0$
b1010101 '
1"
#90
0"
#95
b10 0
b10 ;
b10 =
1$
b1011111 '
1"
#100
0"
#105
b11 0
b11 ;
b11 =
b1101001 '
1"
#110
0"
#115
11
b10 B
1/
b100 0
b100 ;
b100 =
b1110011 *
b10 (
bx01 #
0$
b1110011 '
1"
#120
0"
#125
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
1$
b1111101 '
1"
#130
0"
#135
02
0+
b1 C
b10000 -
b10000 E
b10 4
b10 7
b10 9
b1 0
b1 ;
b1 =
b10000111 '
1"
#140
0"
#145
b10 0
b10 ;
b10 =
0$
b10010001 '
1"
#150
0"
#155
b11 0
b11 ;
b11 =
1$
b10011011 '
1"
#160
0"
#165
11
b10 B
1/
b100 0
b100 ;
b100 =
b10100101 *
b11 (
bx001 #
0$
b10100101 '
1"
#170
0"
#175
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
1$
b10101111 '
1"
#180
0"
#185
02
0+
b1 0
b1 ;
b1 =
b11 4
b11 7
b11 9
b1000 -
b1000 E
b1 C
0$
b10111001 '
1"
#190
0"
#195
b10 0
b10 ;
b10 =
1$
b11000011 '
1"
#200
0"
#205
b11 0
b11 ;
b11 =
b11001101 '
1"
#210
0"
#215
11
b10 B
1/
b100 0
b100 ;
b100 =
b11010111 *
b100 (
bx0001 #
0$
b11010111 '
1"
#220
0"
#225
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
1$
b11100001 '
1"
#230
0"
#235
02
0+
13
b1 C
b100 -
b100 E
b100 4
b100 7
b100 9
b1 0
b1 ;
b1 =
0$
b11101011 '
1"
#240
0"
#245
b10 0
b10 ;
b10 =
b11110101 '
1"
#250
0"
#255
b11 0
b11 ;
b11 =
b11111111 '
1"
#260
0"
#265
11
b10 B
1/
b100 0
b100 ;
b100 =
b100001001 *
b0 (
b10001 #
1$
b100001001 '
1"
#270
0"
#275
12
01
1+
b11 B
0/
b10 C
b0 0
b0 ;
b0 =
0$
b100010011 '
1"
#280
0"
#285
0!
03
02
05
0+
1,
b0 B
b1 0
b1 ;
b1 =
b101 4
b101 7
b101 9
b10010 -
b10010 E
b11 C
1$
b100011101 '
1"
#290
0"
#295
15
11
0,
b1 B
b0 C
b10 0
b10 ;
b10 =
b100100111 '
1"
#300
0"
#305
05
01
b0 0
b0 ;
b0 =
b0 4
b0 7
b0 9
b1 C
b100110001 '
1"
#310
0"
#315
b1 0
b1 ;
b1 =
b100111011 *
b1 (
b100111011 '
1"
#320
0"
#325
b10 0
b10 ;
b10 =
0$
b101000101 '
1"
#330
0"
#335
b11 0
b11 ;
b11 =
b101001111 '
1"
#340
0"
#345
11
b10 B
1/
b100 0
b100 ;
b100 =
b101011001 '
1"
#350
0"
#355
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
b101100011 '
1"
#360
0"
#365
02
0+
b1 0
b1 ;
b1 =
b1 4
b1 7
b1 9
b11001 -
b11001 E
b1 C
b101101101 *
b10 (
b10011 #
1$
b101101101 '
1"
#370
0"
#375
b10 0
b10 ;
b10 =
0$
b101110111 '
1"
#380
0"
#385
b11 0
b11 ;
b11 =
1$
b110000001 '
1"
#390
0"
#395
11
b10 B
1/
b100 0
b100 ;
b100 =
b110001011 '
1"
#400
0"
#405
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
b110010101 '
1"
#410
0"
#415
02
0+
b1 C
b11100 -
b11100 E
b10 4
b10 7
b10 9
b1 0
b1 ;
b1 =
b110011111 *
b11 (
b10111 #
b110011111 '
1"
#420
0"
#425
b10 0
b10 ;
b10 =
b110101001 '
1"
#430
0"
#435
b11 0
b11 ;
b11 =
0$
b110110011 '
1"
#440
0"
#445
11
b10 B
1/
b100 0
b100 ;
b100 =
b110111101 '
1"
#450
0"
#455
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
1$
b111000111 '
1"
#460
0"
#465
02
0+
b1 0
b1 ;
b1 =
b11 4
b11 7
b11 9
b11110 -
b11110 E
b1 C
b111010001 *
b100 (
b11111 #
b111010001 '
1"
#470
0"
#475
b10 0
b10 ;
b10 =
b111011011 '
1"
#480
0"
#485
b11 0
b11 ;
b11 =
0$
b111100101 '
1"
#490
0"
#495
11
b10 B
1/
b100 0
b100 ;
b100 =
b111101111 '
1"
#500
0"
#505
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
b111111001 '
1"
#510
0"
#515
02
0+
13
b1 C
b1111 -
b1111 E
b100 4
b100 7
b100 9
b1 0
b1 ;
b1 =
b1000000011 *
b0 (
b1111 #
b1000000011 '
1"
#520
0"
#525
b10 0
b10 ;
b10 =
b1000001101 '
1"
#530
0"
#535
b11 0
b11 ;
b11 =
1$
b1000010111 '
1"
#540
0"
#545
11
b10 B
1/
b100 0
b100 ;
b100 =
0$
b1000100001 '
1"
#550
0"
#555
12
01
1+
b11 B
0/
b10 C
b0 0
b0 ;
b0 =
b1000101011 '
1"
#560
0"
#565
0!
03
02
05
0+
1,
b0 B
b1 0
b1 ;
b1 =
b101 4
b101 7
b101 9
b10111 -
b10111 E
b11 C
b1000110101 *
b1 (
1$
b1000110101 '
1"
#570
0"
#575
15
11
0,
b1 B
b0 C
b10 0
b10 ;
b10 =
b1000111111 '
1"
#580
0"
#585
05
01
b0 0
b0 ;
b0 =
b0 4
b0 7
b0 9
b1 C
0$
b1001001001 '
1"
#590
0"
#595
b1 0
b1 ;
b1 =
b1001010011 '
1"
#600
0"
#605
b10 0
b10 ;
b10 =
b1001011101 '
1"
#610
0"
#615
b11 0
b11 ;
b11 =
b1001100111 *
b10 (
b1101 #
b1001100111 '
1"
#620
0"
#625
11
b10 B
1/
b100 0
b100 ;
b100 =
b1001110001 '
1"
#630
0"
#635
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
1$
b1001111011 '
1"
#640
0"
#645
02
0+
b1 0
b1 ;
b1 =
b1 4
b1 7
b1 9
b11011 -
b11011 E
b1 C
b1010000101 '
1"
#650
0"
#655
b10 0
b10 ;
b10 =
b1010001111 '
1"
#660
0"
#665
b11 0
b11 ;
b11 =
b1010011001 *
b11 (
b1010011001 '
1"
#670
0"
#675
11
b10 B
1/
b100 0
b100 ;
b100 =
b1010100011 '
1"
#680
0"
#685
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
0$
b1010101101 '
1"
#690
0"
#695
02
0+
b1 C
b1101 -
b1101 E
b10 4
b10 7
b10 9
b1 0
b1 ;
b1 =
b1010110111 '
1"
#700
0"
#705
b10 0
b10 ;
b10 =
1$
b1011000001 '
1"
#710
0"
#715
b11 0
b11 ;
b11 =
b1011001011 *
b100 (
b1011001011 '
1"
#720
0"
#725
11
b10 B
1/
b100 0
b100 ;
b100 =
b1011010101 '
1"
#730
0"
#735
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
0$
b1011011111 '
1"
#740
0"
#745
02
0+
b1 0
b1 ;
b1 =
b11 4
b11 7
b11 9
b110 -
b110 E
b1 C
b1011101001 '
1"
#750
0"
#755
b10 0
b10 ;
b10 =
1$
b1011110011 '
1"
#760
0"
#765
b11 0
b11 ;
b11 =
b1011111101 *
b0 (
b11101 #
b1011111101 '
1"
#770
0"
#775
11
b10 B
1/
b100 0
b100 ;
b100 =
0$
b1100000111 '
1"
#780
0"
#785
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
1$
b1100010001 '
1"
#790
0"
#795
02
0+
13
b1 C
b10011 -
b10011 E
b100 4
b100 7
b100 9
b1 0
b1 ;
b1 =
b1100011011 '
1"
#800
0"
#805
b10 0
b10 ;
b10 =
0$
b1100100101 '
1"
#810
0"
#815
b11 0
b11 ;
b11 =
b1100101111 *
b1 (
1$
b1100101111 '
1"
#820
0"
#825
11
b10 B
1/
b100 0
b100 ;
b100 =
b1100111001 '
1"
#830
0"
#835
12
01
1+
b11 B
0/
b10 C
b0 0
b0 ;
b0 =
b1101000011 '
1"
#840
0"
#845
1!
03
02
05
0+
1,
b0 B
b1 0
b1 ;
b1 =
b101 4
b101 7
b101 9
b1001 -
b1001 E
b11 C
0$
b1101001101 '
1"
#850
0"
#855
0!
15
11
0,
b1 B
b0 C
b10 0
b10 ;
b10 =
1$
b1101010111 '
1"
#860
0"
#865
05
01
b0 0
b0 ;
b0 =
b0 4
b0 7
b0 9
b1 C
b1101100001 *
b10 (
b11111 #
b1101100001 '
1"
#870
0"
#875
b1 0
b1 ;
b1 =
0$
b1101101011 '
1"
#880
0"
#885
b10 0
b10 ;
b10 =
b1101110101 '
1"
#890
0"
#895
b11 0
b11 ;
b11 =
b1101111111 '
1"
#900
0"
#905
11
b10 B
1/
b100 0
b100 ;
b100 =
b1110001001 '
1"
#910
0"
#915
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
b1110010011 *
b11 (
1$
b1110010011 '
1"
#920
0"
#925
02
0+
b1 0
b1 ;
b1 =
b1 4
b1 7
b1 9
b10100 -
b10100 E
b1 C
b1110011101 '
1"
#930
0"
#935
b10 0
b10 ;
b10 =
0$
b1110100111 '
1"
#940
0"
#945
b11 0
b11 ;
b11 =
b1110110001 '
1"
#950
0"
#955
11
b10 B
1/
b100 0
b100 ;
b100 =
1$
b1110111011 '
1"
#960
0"
#965
0/
12
01
1+
b1 B
b0 0
b0 ;
b0 =
b10 C
b1111000101 *
b100 (
b1111000101 '
1"
#970
0"
#975
02
0+
b1 C
b11010 -
b11010 E
b10 4
b10 7
b10 9
b1 0
b1 ;
b1 =
b1111001111 '
1"
#980
0"
#985
b10 0
b10 ;
b10 =
b1111011001 '
1"
#990
0"
#995
b11 0
b11 ;
b11 =
b1111100011 '
1"
#1000
0"
#1005
11
b10 B
1/
b100 0
b100 ;
b100 =
0$
b1111101101 '
1"
#1010
0"
#1015
12
01
1+
b1 B
0/
b10 C
b0 0
b0 ;
b0 =
1"
#1020
0"
#1025
02
0+
b1 0
b1 ;
b1 =
b11 4
b11 7
b11 9
b1101 -
b1101 E
b1 C
1"
